import { module, test } from 'qunit'
import { awaitChallengeLoading, setupPBAcceptanceTest, safeVisit } from "../helpers/utils"

module('Acceptance | challenge content internationalization test', function (hooks) {
  setupPBAcceptanceTest(hooks)

  test(`Markdown text gets formatted`, async function (assert) {
    await safeVisit(`/desafio/1`)
    await awaitChallengeLoading()
    const italicText = $("em").text().trim()
    assert.equal(italicText, 'primitivas')
  })

  /*
   * Validates after all promises finish.
   * Checks title, description and clue of the challenge are translated.
   */

  function testCanVisit(challengeId, expectedTitle, expectedescription, expectedClue) {
    test(`Challenge ${challengeId} is internationalized`, async function (assert) {
      await safeVisit(`/desafio/${challengeId}`)
      await awaitChallengeLoading()

      const challengeTitle = $(".challenge-title").text().trim()
      assert.equal(challengeTitle, expectedTitle)
      assert.dom("[data-test-challenge-description]").matchesText(expectedescription)
      assert.dom("[data-test-challenge-clue]").matchesText(expectedClue)
    })
  }

  // Second book challenge:
  testCanVisit(1,
    'El alien toca el bot√≥n',
    'Ayud√° a nuestro Alien a presionar el bot√≥n de su laboratorio. Pistas: mir√° las primitivas disponibles. ¬°Vas a tener que avanzar varias veces! üòâ',
    'Los bloques te permiten formar secuencias de acciones para resolver los desaf√≠os que te proponemos en Pilas Bloques.')

  // Conditional Alternative:
  // Because markdown is being used, the clue of this challenge uses the caracter '‚Ä¶', which is different from '...' (three dot characters).
  testCanVisit(13,
    'El mono y las bananas',
    '¬øPod√©s hacer que el mono avance al casillero de enfrente? Si hay una banana debe com√©rsela. Si no, es feliz con s√≥lo llegar. Ejecut√° el programa varias veces para asegurarte que siempre funciona. Pista: mir√° la categor√≠a \"Sensores\" y la categor√≠a \"Alternativas\".',
    'El bloque \"Si‚Ä¶ Entonces\" ejecuta una secuencia de instrucciones solamente cuando la condici√≥n es verdadera. Esto se llama \"alternativa condicional\".')

  // Challenge with no clues:
  testCanVisit(15,
    'Laberinto corto',
    'Gui√° al rat√≥n para llegar a la meta. Para lograrlo, debe avanzar una casilla en la direcci√≥n que indica la flecha. Pista: mir√° en la categor√≠a \"Sensores\" qu√© preguntas pod√©s hacer.',
    '')

  // First book challenge:
  testCanVisit(230,
    'Desaf√≠o 1',
    '¬øPuede la puma llegar al churrasco usando solo una vez el bloque mover?',
    'Pod√©s usar el nuevo bloque "Repetir"')

})
